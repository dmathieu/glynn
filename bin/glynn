#!/usr/bin/env ruby
require 'rubygems'
require 'jekyll'
require 'netrc'
require 'glynn'
require 'highline'
require 'io/console'
$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])


def get_from_environment (environment, options, key)
  if options[environment] and options[environment][key]
    return options[environment][key]
  else
    return options[key]
  end
end 

netrc = Netrc.read
cli = HighLine.new

options = {}
environment = ''

if(ARGV.include? '-e' or ARGV.include? '-environment')
  environment_index = (ARGV.index('-e') || ARGV.index('-environment'))
  ARGV.delete_at(environment_index)
  environment = ARGV[environment_index]
  ARGV.delete_at(environment_index)
end


case ARGV.size
  when 0
  when 1
    options['destination'] = ARGV[0]
  when 2
    options['source'] = ARGV[0]
    options['destination'] = ARGV[1]
  when 4
    options['source'] = ARGV[0]
    options['destination'] = ARGV[1]
    options['ftp_username'] = ARGV[2]
    options['ftp_password'] = ARGV[3]
end
options    = Jekyll.configuration(options)
# If _glynn.yml exists, load and merge these options
if File.file?('_glynn.yml')
  options = options.merge(YAML.load_file('_glynn.yml'))
end

ftp_port   = (get_from_environment(environment, options, 'ftp_port') || 21).to_i
passive    = get_from_environment(environment, options, 'ftp_passive') || true
ftp_secure = get_from_environment(environment, options, 'ftp_secure') || false

# Include Username/Password from .netrc file if available
if n = netrc[ get_from_environment(environment, options, 'ftp_host') ]
  if get_from_environment(environment, options, 'ftp_username') || get_from_environment(environment, options, 'ftp_password')
    cli.say cli.color(
      "The username and password settings from the configuration file" +
      " take precedence over those in the netrc file!",
      :yellow
    )
  end
  options = (Hash[['ftp_username', 'ftp_password'].zip n]).merge options
end

cli.say "Building site: #{options['source']} -> #{options['destination']}"
jekyll = Glynn::Jekyll.new
jekyll.build
cli.say cli.color("Successfully generated site", :green)

cli.say "Sending site over FTP (host: #{get_from_environment(environment, options, 'ftp_host')}, port: #{get_from_environment(environment, options, 'ftp_port')}, ftps: #{get_from_environment(environment, options, 'ftp_secure')})"

if get_from_environment(environment, options, 'ftp_username').nil?
  username = cli.ask "FTP Username: "
else
  username = get_from_environment(environment, options, 'ftp_username')
end

if get_from_environment(environment, options, 'ftp_password').nil?
  # Get the password without echoing characters
  password = cli.ask("FTP Password: ") { |q| q.echo = false }
  if cli.agree("Would you like to save this password to #{Netrc.default_path}?")
    netrc[get_from_environment(environment, options, 'ftp_host')] = username, password
    netrc.save
  end
else
  password = get_from_environment(environment, options, 'ftp_password')
end

ftp = Glynn::Ftp.new(get_from_environment(environment, options, 'ftp_host'), ftp_port, {
  :username => username,
  :password => password,
  :passive  => passive,
  :secure   => ftp_secure
})
cli.say "Connected to server. Sending site"
ftp.sync(get_from_environment(environment, options, 'destination'), get_from_environment(environment, options, 'ftp_dir'))
cli.say cli.color("Successfully sent site", :green)